<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Salesforce Custom Field XML Generator</title>
    <link rel="stylesheet" href="/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css">
</head>
<body>
    <div class="main-container">
        <header class="header">
            <h1>Salesforce Custom Field XML Generator</h1>
            <div class="subtitle">Generate metadata XML for Salesforce custom fields quickly and efficiently</div>
            <div class="open-source-banner">
                <p>üåü This is an open-source project. Your data stays in your browser - nothing is sent to any server.</p>
                <a href="https://github.com/thedhanawada/sfdx-field-gen" class="github-link" target="_blank">
                    <svg height="24" viewBox="0 0 16 16" width="24">
                        <path fill="currentColor" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
                    </svg>
                    View on GitHub
                </a>
            </div>
        </header>

        <div class="content-wrapper">
            <section class="info-section">
                <div class="info-card story-card">
                    <h2>Why I Built This Tool</h2>
                    <p>So here's the thing - I was working on this Salesforce project where I had to create over 100 custom fields. Yeah, you read that right. 100+ fields! üòÖ</p>

                    <p>I had three options, and honestly, none of them were great:</p>
                    <ul>
                        <li>Click through the Salesforce UI like a robot (seriously, my mouse hand was getting tired)</li>
                        <li>Write XML manually in VS Code (and probably mess up the formatting 20 times)</li>
                        <li>Use Salesforce CLI commands (and still have to do each field one by one)</li>
                    </ul>

                    <p>After spending what felt like forever creating these fields one by one, I thought "This is ridiculous - there's got to be a better way!" And when I couldn't find a tool that did exactly what I needed, I built one.</p>

                    <p>Now instead of spending 15 minutes per field clicking through menus or writing XML, I can generate the exact code I need in seconds. Whether you're building a huge data model, working on a managed package, or just need to create a bunch of fields quickly - I hope this saves you the time and headache it saved me!</p>
                </div>

                <div class="info-card">
                    <h2>How to Use</h2>
                    <ol>
                        <li>Fill in the field details in the form</li>
                        <li>Click "Generate XML" to see the output</li>
                        <li>Copy the generated XML</li>
                        <li>Paste into your Salesforce package XML file</li>
                        <li>Deploy using Salesforce DX or Metadata API</li>
                    </ol>
                </div>

                <div class="info-card">
                    <h2>Pro Tips</h2>
                    <ul>
                        <li>Remember to include "__c" in your field API names</li>
                        <li>For picklist values, separate each value with a comma</li>
                        <li>Keep your field labels clear and user-friendly</li>
                        <li>Add help text to improve user experience</li>
                    </ul>
                </div>
            </section>

            <div class="form-output-container">
                <section class="form-section">
                    <h2>Generate Field XML</h2>
                    <form id="fieldForm" class="field-form">
                        <div class="form-group">
                            <label for="fullName">API Name:</label>
                            <input type="text" id="fullName" name="fullName" required>
                            <small class="help-text">Don't forget to add "__c" (e.g., My_Custom_Field__c)</small>
                        </div>

                        <div class="form-group">
                            <label for="label">Field Label:</label>
                            <input type="text" id="label" name="label" required>
                            <small class="help-text">The label users will see in Salesforce</small>
                        </div>

                        <div class="form-group">
                            <label for="type">Field Type:</label>
                            <select id="type" name="type">
                                <option value="Text">Text</option>
                                <option value="Picklist">Picklist</option>
                                <option value="Checkbox">Checkbox</option>
                                <option value="Number">Number</option>
                                <option value="Date">Date</option>
                                <option value="DateTime">DateTime</option>
                                <option value="Email">Email</option>
                                <option value="Phone">Phone</option>
                                <option value="URL">URL</option>
                                <option value="TextArea">TextArea</option>
                                <option value="LongTextArea">LongTextArea</option>
                                <option value="Currency">Currency</option>
                                <option value="Percent">Percent</option>
                            </select>
                        </div>

                        <div id="picklistOptions" class="form-group" style="display:none;">
                            <label for="picklistValues">Picklist Values:</label>
                            <input type="text" id="picklistValues" name="picklistValues">
                            <small class="help-text">Enter values separated by commas (e.g., High, Medium, Low)</small>
                        </div>

                        <div class="form-group checkbox-group">
                            <label for="required">
                                <input type="checkbox" id="required" name="required">
                                Required Field
                            </label>
                        </div>

                        <div class="form-group">
                            <label for="inlineHelpText">Help Text:</label>
                            <input type="text" id="inlineHelpText" name="inlineHelpText">
                            <small class="help-text">Helpful information for users filling out this field</small>
                        </div>

                        <button type="submit" class="btn btn-primary">Generate XML</button>
                    </form>
                </section>

                <section id="output-section" class="output-section" style="display: none;">
                    <h2>Generated XML</h2>
                    <div class="output-box">
                        <pre><code class="language-xml" id="xmlOutput"></code></pre>
                    </div>
                    <div class="button-group">
                        <button id="copyBtn" class="btn btn-secondary">Copy XML</button>
                        <button id="downloadBtn" class="btn btn-primary">Download XML</button>
                    </div>
                </section>
            </div>
        </div>

        <div class="stats-section">
          <button id="statsBtn" class="stats-toggle">Developer Details üë®‚Äçüíª</button>
                      <div id="statsContent" class="stats-content" style="display: none;">
                <h3>Technical Details</h3>
                <div class="stats-grid">
                    <div class="stats-item">
                        <h4>Frontend</h4>
                        <ul>
                            <li>Vanilla JavaScript</li>
                            <li>EJS Templates</li>
                            <li>CSS3 with Custom Properties</li>
                            <li>Prism.js for syntax highlighting</li>
                        </ul>
                    </div>
                    <div class="stats-item">
                        <h4>Backend</h4>
                        <ul>
                            <li>Node.js</li>
                            <li>Express.js</li>
                            <li>Body Parser</li>
                        </ul>
                    </div>
                    <div class="stats-item">
                        <h4>Hosting & Deployment</h4>
                        <ul>
                            <li>Hosted on Render</li>
                            <li>Auto-deploys from GitHub</li>
                            <li>Version control with Git</li>
                        </ul>
                    </div>
                    <div class="stats-item">
                        <h4>Performance</h4>
                        <ul>
                            <li>No database - all client-side</li>
                            <li>Minimal dependencies</li>
                            <li>Lightweight & fast</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <footer class="footer">
            <p>Built with ‚ù§Ô∏è for the Salesforce developer community</p>
        </footer>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-core.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-markup.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-xml.min.js"></script>
    <script>
        const form = document.getElementById('fieldForm');
        const typeSelect = document.getElementById('type');
        const picklistOptions = document.getElementById('picklistOptions');
        const outputSection = document.getElementById('output-section');
        const xmlOutput = document.getElementById('xmlOutput');
        const copyBtn = document.getElementById('copyBtn');
        const downloadBtn = document.getElementById('downloadBtn');
        const statsBtn = document.getElementById('statsBtn');
        const statsContent = document.getElementById('statsContent');

        typeSelect.addEventListener('change', () => {
            picklistOptions.style.display = typeSelect.value === 'Picklist' ? 'block' : 'none';
        });

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(form);
            const response = await fetch('/generate', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: new URLSearchParams(formData),
            });
            const data = await response.text();
            xmlOutput.textContent = data;
            Prism.highlightElement(xmlOutput);
            outputSection.style.display = 'block';
            outputSection.scrollIntoView({ behavior: 'smooth' });
        });

        copyBtn.addEventListener('click', () => {
            navigator.clipboard.writeText(xmlOutput.textContent);
            copyBtn.textContent = 'Copied!';
            setTimeout(() => {
                copyBtn.textContent = 'Copy XML';
            }, 2000);
        });

        downloadBtn.addEventListener('click', () => {
            const blob = new Blob([xmlOutput.textContent], { type: 'text/xml' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'custom_field.xml';
            a.click();
            window.URL.revokeObjectURL(url);
        });

        statsBtn.addEventListener('click', () => {
            const isHidden = statsContent.style.display === 'none';
            statsContent.style.display = isHidden ? 'block' : 'none';
            statsBtn.textContent = isHidden ? 'Hide Details üë®‚Äçüíª' : 'Developer Details üë®‚Äçüíª';
        });

</script>
</body>
</html>